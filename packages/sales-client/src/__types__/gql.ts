/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n\tquery GetBanksInAdminPanelBanks {\n    getBanks {\n      id\n      name\n      isVisible\n    }\n  }\n": types.GetBanksInAdminPanelBanksDocument,
    "\n  mutation CreateBankInAdminPanelBanks($input: CreateBankInput!) {\n    createBank(input: $input) {\n      id\n      name\n    }\n  }\n": types.CreateBankInAdminPanelBanksDocument,
    "\n  mutation UpdateBankInAdminPanelBanks($input: UpdateBankInput!) {\n    updateBank(input: $input) {\n      id\n      name\n    }\n  }\n": types.UpdateBankInAdminPanelBanksDocument,
    "\n  mutation DeleteBankInAdminPanelBanks($input: DeleteBankInput!) {\n    deleteBank(input: $input)\n  }\n": types.DeleteBankInAdminPanelBanksDocument,
    "\n\tquery GetUsersInAdminPanelManagers {\n    getUsers {\n      id\n      fullName\n      email\n      phone\n      isManager\n      isStaff\n      userRole\n    }\n  }\n": types.GetUsersInAdminPanelManagersDocument,
    "\n  mutation CreateUserInAdminPanelManagers($input: CreateUserInput!) {\n    createUser(input: $input) {\n      id\n    }\n  }\n": types.CreateUserInAdminPanelManagersDocument,
    "\n  mutation UpdateUserInAdminPanelManagers($input: UpdateUserInput!) {\n    updateUser(input: $input) {\n      id\n    }\n  }\n": types.UpdateUserInAdminPanelManagersDocument,
    "\n  mutation DeleteUserInAdminPanelManagers($input: DeleteUserInput!) {\n    deleteUser(input: $input)\n  }\n": types.DeleteUserInAdminPanelManagersDocument,
    "\n\tquery GetSubsidiesInAdminPanelSubsidies {\n    getSubsidies {\n      id\n      name\n      isVisible\n    }\n  }\n": types.GetSubsidiesInAdminPanelSubsidiesDocument,
    "\n  mutation CreateSubsidyInAdminPanelSubsidies($input: CreateSubsidyInput!) {\n    createSubsidy(input: $input) {\n      id\n      name\n    }\n  }\n": types.CreateSubsidyInAdminPanelSubsidiesDocument,
    "\n  mutation UpdateSubsidyInAdminPanelSubsidies($input: UpdateSubsidyInput!) {\n    updateSubsidy(input: $input) {\n      id\n      name\n    }\n  }\n": types.UpdateSubsidyInAdminPanelSubsidiesDocument,
    "\n  mutation DeleteSubsidyInAdminPanelSubsidies($input: DeleteSubsidyInput!) {\n    deleteSubsidy(input: $input)\n  }\n": types.DeleteSubsidyInAdminPanelSubsidiesDocument,
    "\n\tquery GetAgenciesInAgencyContractPicker($input: GetAgenciesInput!) {\n\t\tgetAgencies(input: $input) {\n\t\t\tagencies {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbContractorsId\n\t\t\t}\n\t\t}\n\t}\n": types.GetAgenciesInAgencyContractPickerDocument,
    "\n\tquery GetAgencyContractsInAgencyContractPicker($input: GetAgencyContractsInput!) {\n\t\tgetAgencyContracts(input: $input) {\n\t\t\tagencyContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tagencyContractType\n\t\t\t}\n\t\t\tmipAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tmaxDays\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t}\n\t\t\t}\n\t\t\trealEstateAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tmaxDays\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t}\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbObjectsId\n\t\t\t}\n\t\t\tagency {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbContractorsId\n\t\t\t}\n\t\t}\n\t}\n": types.GetAgencyContractsInAgencyContractPickerDocument,
    "\n\tquery GetAgencyContractSignatoriesInAgencyContractSignatoryPicker($input: GetAgencyContractSignatoriesInput!) {\n\t\tgetAgencyContractSignatories(input: $input) {\n\t\t\tid\n\t\t\tfullName\n\t\t\tbasedOn\n\t\t\ttitle\n\t\t}\n\t}\n": types.GetAgencyContractSignatoriesInAgencyContractSignatoryPickerDocument,
    "\n  query GetObjectsInMipAgencyContract {\n\t\tgetObjects {\n      id\n      name\n\t\t}\n\t}\n": types.GetObjectsInMipAgencyContractDocument,
    "\n\tquery GetAgencyContractInMipAgencyContract($input: GetAgencyContractInput!) {\n\t\tgetAgencyContract(input: $input) {\n\t\t\tagencyContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tagencyContractType\n\t\t\t\tlink\n\t\t\t}\n\t\t\tagencyContractSignatory {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tbasedOn\n\t\t\t\ttitle\n\t\t\t}\n\t\t\tmipAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t\tmaxDays\n\t\t\t\t}\n\t\t\t}\n\t\t\tentity {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tagency {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tresponsibleUser {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t}\n\t}\n": types.GetAgencyContractInMipAgencyContractDocument,
    "\n  mutation CreateAgencyContractInMipAgencyContract($input: CreateAgencyContractInput!) {\n\t\tcreateAgencyContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n": types.CreateAgencyContractInMipAgencyContractDocument,
    "\n  mutation UpdateAgencyContractInMipAgencyContract($input: UpdateAgencyContractInput!) {\n\t\tupdateAgencyContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n": types.UpdateAgencyContractInMipAgencyContractDocument,
    "\n\tmutation CreateAgencyContractSignatoryInNewAgencyContractSignatory($input: CreateAgencyContractSignatoryInput!) {\n\t\tcreateAgencyContractSignatory(input: $input) {\n\t\t\tid\n\t\t\tfullName\n\t\t\tbasedOn\n\t\t\ttitle\n\t\t}\n\t}\t\n": types.CreateAgencyContractSignatoryInNewAgencyContractSignatoryDocument,
    "\n  query GetObjectsInNewAgencyContract {\n\t\tgetObjects {\n      id\n      name\n\t\t}\n\t}\n": types.GetObjectsInNewAgencyContractDocument,
    "\n\tquery GetAgencyContractInRealEstateAgencyContract($input: GetAgencyContractInput!) {\n\t\tgetAgencyContract(input: $input) {\n\t\t\tagencyContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tagencyContractType\n\t\t\t\tlink\n\t\t\t}\n\t\t\tagencyContractSignatory {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tbasedOn\n\t\t\t\ttitle\n\t\t\t}\n\t\t\trealEstateAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t\tmaxDays\n\t\t\t\t}\n\t\t\t}\n\t\t\tentity {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tagency {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tresponsibleUser {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t}\n\t}\n": types.GetAgencyContractInRealEstateAgencyContractDocument,
    "\n  mutation CreateAgencyContractInNewAgencyContract($input: CreateAgencyContractInput!) {\n\t\tcreateAgencyContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n": types.CreateAgencyContractInNewAgencyContractDocument,
    "\n  mutation UpdateAgencyContractInNewAgencyContract($input: UpdateAgencyContractInput!) {\n\t\tupdateAgencyContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n": types.UpdateAgencyContractInNewAgencyContractDocument,
    "\n\tquery GetAgenciesInAgencies($input: GetAgenciesInput!) {\n\t\tgetAgencies(input: $input) {\n\t\t\tagencies {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n": types.GetAgenciesInAgenciesDocument,
    "\n\tquery GetAgenciesInAgencyPicker($input: GetAgenciesInput!) {\n\t\tgetAgencies(input: $input) {\n\t\t\tagencies {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n": types.GetAgenciesInAgencyPickerDocument,
    "\n\tquery GetAgencyAndAgencyContractsInAgency(\n\t\t$agencyInput: GetAgencyInput!\n\t\t$agencyContractsInput:GetAgencyContractsInput!\n\t) {\n\t\tgetAgency(input: $agencyInput) {\n\t\t\tagency {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tinn\n\t\t\t\tcommonDbContractorsId\n\t\t\t}\n\t\t}\n\t\tgetAgencyContracts(input: $agencyContractsInput) {\n\t\t\tagencyContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tagencyContractType\n\t\t\t}\n\t\t\tmipAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tmaxDays\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t}\n\t\t\t}\n\t\t\trealEstateAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tmaxDays\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t}\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tcommonDbObjectsId\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n": types.GetAgencyAndAgencyContractsInAgencyDocument,
    "\n\tquery GetCommonContractorInAgency($input: GetCommonContractorInput!) {\n\t\tgetCommonContractor(input: $input) {\n\t\t\tcontractor {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tshortName\n\t\t\t\tinn\n\t\t\t\tkpp\n\t\t\t\togrn\n\t\t\t\tlegalAddress\n\t\t\t\tactualAddress\n\t\t\t\tcontacts\n\t\t\t\treconciliationLink\n\t\t\t\tisActive\n\t\t\t\tpropogatedAt\n\t\t\t\tphone\n\t\t\t}\n\t\t\taccounts {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tbank {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tcity\n\t\t\t\t\tbik\n\t\t\t\t\tcorrespondentNumber\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.GetCommonContractorInAgencyDocument,
    "\n\tquery GetCommonContractorsInNewAgency($input: GetCommonContractorsInput!) {\n\t\tgetCommonContractors(input: $input) {\n\t\t\tcontractors {\n\t\t\t\tcontractor {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tshortName\n\t\t\t\t\tinn\n\t\t\t\t\tkpp\n\t\t\t\t\togrn\n\t\t\t\t\tlegalAddress\n\t\t\t\t\tactualAddress\n\t\t\t\t\tcontacts\n\t\t\t\t\treconciliationLink\n\t\t\t\t\tisActive\n\t\t\t\t\tpropogatedAt\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t\taccounts {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tbank {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t\tcity\n\t\t\t\t\t\tbik\n\t\t\t\t\t\tcorrespondentNumber\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.GetCommonContractorsInNewAgencyDocument,
    "\n\tmutation CreateAgencyInNewAgency($input: CreateAgencyInput!) {\n\t\tcreateAgency(input: $input) {\n\t\t\tid\n\t\t}\n\t}\t\n": types.CreateAgencyInNewAgencyDocument,
    "\n\tquery GetBanksInBankPicker {\n\t\tgetBanks {\n\t\t\tid\n\t\t\tname\n\t\t\tisVisible\n\t\t}\n\t}\n": types.GetBanksInBankPickerDocument,
    "\n\tmutation CreateAssignmentInAssignment($input: CreateAssignmentInput!) {\n    createAssignment(input: $input)\n  }\n": types.CreateAssignmentInAssignmentDocument,
    "\n\tquery GetObjectsInClientContracts {\n\t\tgetObjects {\n\t\t\tid\n\t\t\tname\n\t\t\tcommonDbObjectsId\n\t\t}\n\t}\n": types.GetObjectsInClientContractsDocument,
    "\n\tquery GetClientContractsInClientContracts($input: GetClientContractsInput!) {\n\t\tgetClientContracts(input: $input) {\n\t\t\tclientContracts {\n\t\t\t\tclientContractProperties {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tprice\n\t\t\t\t\tdate\n\t\t\t\t\tclientContractType\n\t\t\t\t}\n\t\t\t\tclients {\n\t\t\t\t\tclient {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tfullName\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tproduct {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\tproductCategory\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tagencyContracts {\n            agencyContract {\n              agencyContractType\n          }\n        }\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n": types.GetClientContractsInClientContractsDocument,
    "\n\tquery GetClientContractInDduClientContract($input: GetClientContractInput!) {\n\t\tgetClientContract(input: $input) {\n\t\t\tagencyContracts {\n\t\t\t\tagencyContract {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tagencyContractType\n\t\t\t\t}\n\t\t\t\tmipAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trealEstateAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tagency {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tcommonDbContractorsId\n\t\t\t\t}\n\t\t\t}\n\t\t\tbank {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tisVisible\n\t\t\t}\n\t\t\tsubsidy {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tisVisible\n\t\t\t}\n\t\t\tclientContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tregistrationDate\n\t\t\t\tprice\n\t\t\t\tclientContractType\n\t\t\t\tcomment\n\t\t\t\tlink\n\t\t\t}\n\t\t\tclients {\n\t\t\t\tclient {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t\tisMain\n\t\t\t\tshare\n\t\t\t}\n\t\t\tmanager {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbObjectsId\n\t\t\t}\n\t\t\tproduct {\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tcommonDbObjectsId\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tid\n\t\t\t\t\tpricingProductsId\n\t\t\t\t\tnumber\n\t\t\t\t\tproductCategory\n\t\t\t\t}\n\t\t\t}\n\t\t\trealEstateAgent {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t\tdduClientContractProperties {\n\t\t\t\tid\n\t\t\t\tisEscrowDiscount\n\t\t\t\tescrowAccountOpeningDate\n\t\t\t\tescrowPeriod\n\t\t\t\tescrowAccountNumber\n\t\t\t\tdduLink\n\t\t\t\treturnAccount\n\t\t\t}\n\t\t}\n\t}\n": types.GetClientContractInDduClientContractDocument,
    "\n\tmutation CreateClientContractIDduClientContract($input: CreateClientContractInput!) {\n\t\tcreateClientContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n": types.CreateClientContractIDduClientContractDocument,
    "\n\tmutation UpdateClientContractInDduClientContract($input: UpdateClientContractInput!) {\n\t\tupdateClientContract(input: $input) {\n\t\t\tid\n\t\t\tnumber\n\t\t}\n\t}\n": types.UpdateClientContractInDduClientContractDocument,
    "\n\tquery GetClientContractInDkpClientContract($input: GetClientContractInput!) {\n\t\tgetClientContract(input: $input) {\n\t\t\tagencyContracts {\n\t\t\t\tagencyContract {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tagencyContractType\n\t\t\t\t}\n\t\t\t\tmipAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trealEstateAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tagency {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tcommonDbContractorsId\n\t\t\t\t}\n\t\t\t}\n\t\t\tbank {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tisVisible\n\t\t\t}\n\t\t\tsubsidy {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tisVisible\n\t\t\t}\n\t\t\tclientContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tregistrationDate\n\t\t\t\tprice\n\t\t\t\tclientContractType\n\t\t\t\tcomment\n\t\t\t\tlink\n\t\t\t}\n\t\t\tclients {\n\t\t\t\tclient {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t\tisMain\n\t\t\t\tshare\n\t\t\t}\n\t\t\tmanager {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbObjectsId\n\t\t\t}\n\t\t\tproduct {\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tcommonDbObjectsId\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tid\n\t\t\t\t\tpricingProductsId\n\t\t\t\t\tnumber\n\t\t\t\t\tproductCategory\n\t\t\t\t}\n\t\t\t}\n\t\t\trealEstateAgent {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t\tdkpClientContractProperties {\n\t\t\t\tid\n\t\t\t\tdkpLink\n\t\t\t}\n\t\t}\n\t}\n": types.GetClientContractInDkpClientContractDocument,
    "\n\tmutation CreateClientContractInDkpClientContract($input: CreateClientContractInput!) {\n\t\tcreateClientContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n": types.CreateClientContractInDkpClientContractDocument,
    "\n\tmutation UpdateClientContractInDkpClientContract($input: UpdateClientContractInput!) {\n\t\tupdateClientContract(input: $input) {\n\t\t\tid\n\t\t\tnumber\n\t\t}\n\t}\n": types.UpdateClientContractInDkpClientContractDocument,
    "\n\tquery GetClientEntityInClientEntity($input: GetClientInput!) {\n\t\tgetClient(input: $input) {\n\t\t\tclientProperties {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tinn\n\t\t\t\tphone\n\t\t\t\temail\n\t\t\t\taddress\n\t\t\t\tclientCategory\n\t\t\t}\n\t\t\tclientEntityProperties {\n\t\t\t\tkpp\n\t\t\t}\n\t\t\trepresentatives {\n        id\n        fullName\n        attorneyNumber\n        attorneyDate\n        authorizedBy\n        authorizedRole\n      }\n\t\t}\n\t}\n": types.GetClientEntityInClientEntityDocument,
    "\n\tmutation CreateClientEntityInClientEntity($input: CreateClientInput!) {\n\t\tcreateClient(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n": types.CreateClientEntityInClientEntityDocument,
    "\n\tmutation UpdateClientEntityInClientEntity($input: UpdateClientInput!) {\n\t\tupdateClient(input: $input) {\n\t\t\tfullName\n\t\t}\n\t}\n": types.UpdateClientEntityInClientEntityDocument,
    "\n\tquery GetClientIndividualMinorInClientIndividualMinor($input: GetClientInput!) {\n\t\tgetClient(input: $input) {\n\t\t\tclientProperties {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tinn\n\t\t\t\tphone\n\t\t\t\temail\n\t\t\t\taddress\n\t\t\t\tclientCategory\n\t\t\t}\n\t\t\tclientIndividualMinorProperties {\n\t\t\t\tdob\n\t\t\t\tsnils\n\t\t\t\tbirthCertificate\n\t\t\t\tclientPassport {\n\t\t\t\t\tnumber\n\t\t\t\t\tissued\n\t\t\t\t\tcode\n\t\t\t\t\tplaceOfBirth\n\t\t\t\t\tregistrationAddress\n\t\t\t\t}\n\t\t\t\trepresentatives {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t}\n\t\t\trepresentatives {\n        id\n        fullName\n        attorneyNumber\n        attorneyDate\n        authorizedBy\n        authorizedRole\n      }\n\t\t}\n\t}\n": types.GetClientIndividualMinorInClientIndividualMinorDocument,
    "\n\tmutation CreateClientIndividualMinorInClientIndividualMinor($input: CreateClientInput!) {\n\t\tcreateClient(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n": types.CreateClientIndividualMinorInClientIndividualMinorDocument,
    "\n\tmutation UpdateClientIndividualMinorInClientIndividualMinor($input: UpdateClientInput!) {\n\t\tupdateClient(input: $input) {\n\t\t\tfullName\n\t\t}\n\t}\n": types.UpdateClientIndividualMinorInClientIndividualMinorDocument,
    "\n\tquery GetClientIndividualInClientIndividual($input: GetClientInput!) {\n\t\tgetClient(input: $input) {\n\t\t\tclientProperties {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tinn\n\t\t\t\tphone\n\t\t\t\temail\n\t\t\t\taddress\n\t\t\t\tclientCategory\n\t\t\t}\n\t\t\tclientIndividualProperties {\n\t\t\t\tdob\n\t\t\t\tsnils\n\t\t\t\tclientPassport {\n\t\t\t\t\tnumber\n\t\t\t\t\tissued\n\t\t\t\t\tcode\n\t\t\t\t\tplaceOfBirth\n\t\t\t\t\tregistrationAddress\n\t\t\t\t}\n\t\t\t}\n\t\t\trepresentatives {\n        id\n        fullName\n        attorneyNumber\n        attorneyDate\n        authorizedBy\n        authorizedRole\n      } \n\t\t}\n\t}\n": types.GetClientIndividualInClientIndividualDocument,
    "\n\tmutation CreateClientIndividualInClientIndividual($input: CreateClientInput!) {\n\t\tcreateClient(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n": types.CreateClientIndividualInClientIndividualDocument,
    "\n\tmutation UpdateClientIndividualInClientIndividual($input: UpdateClientInput!) {\n\t\tupdateClient(input: $input) {\n\t\t\tfullName\n\t\t}\n\t}\n": types.UpdateClientIndividualInClientIndividualDocument,
    "\n\tquery GetClientsInClientPicker($input: GetClientsInput!) {\n\t\tgetClients(input: $input) {\n\t\t\tclients {\n\t\t\t\tclientProperties {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.GetClientsInClientPickerDocument,
    "\n\tquery GetClientsInClients($input: GetClientsInput!) {\n\t\tgetClients(input: $input) {\n\t\t\tclients {\n\t\t\t\tclientProperties {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n": types.GetClientsInClientsDocument,
    "\n\tmutation CreateRepresentativeInNewRepresentative($input: CreateRepresentativeInput!) {\n\t\tcreateRepresentative(input: $input) {\n\t\t\tid\n      fullName\n      attorneyNumber\n      attorneyDate\n      authorizedBy\n      authorizedRole\n\t\t}\n\t}\t\n": types.CreateRepresentativeInNewRepresentativeDocument,
    "\n\tquery GetRepresentativesByClientIdsInRepresentativePicker($input: GetRepresentativesByClientIdsInput!) {\n    getRepresentativesByClientIds(input: $input) {\n      representative {\n        id\n        fullName\n        attorneyNumber\n        attorneyDate\n        authorizedBy\n        authorizedRole\n      }\n      client {\n        id\n        fullName\n      }\n    }\n  }\n": types.GetRepresentativesByClientIdsInRepresentativePickerDocument,
    "\n\tmutation UpdateRepresentativeInNewRepresentative($input: UpdateRepresentativeInput!) {\n\t\tupdateRepresentative(input: $input) {\n\t\t\tid\n      fullName\n      attorneyNumber\n      attorneyDate\n      authorizedBy\n      authorizedRole\n\t\t}\n\t}\t\n": types.UpdateRepresentativeInNewRepresentativeDocument,
    "\n\tquery GetEntitiesInEntityPicker {\n\t\tgetEntities{\n\t\t\tentity {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tobjects {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n": types.GetEntitiesInEntityPickerDocument,
    "\n\tmutation CreateEscrowAccountsHistory($input: [EscrowAccountHistoryInput!]!) {\n\t\tcreateEscrowAccountsHistory(input: $input)\n\t}\n": types.CreateEscrowAccountsHistoryDocument,
    "\n\tquery GetEscrowAccountsHistory($input: GetEscrowAccountsHistoryInput) {\n\t\tgetEscrowAccountsHistory(input: $input) {\n\t\t\tescrowAccountsHistory {\n\t\t\t\tid\n\t\t\t\tstatus\n\t\t\t\tnumber\n\t\t\t\topeningDate\n\t\t\t\tdepositedAmount\n\t\t\t\tincomingBalance\n\t\t\t\tdateOfTransaction\n\t\t\t\ttransactionAmount\n\t\t\t\toutgoingBalance\n\t\t\t\texpirationDate\n\t\t\t\tdepositor\n\t\t\t\tdepositorInn\n\t\t\t\tdduNumber\n\t\t\t\tdduDate\n\t\t\t\tloanAgreementNumber\n\t\t\t\tloanAgreementDate\n\t\t\t\tclosingDate\n\t\t\t\tbuilderInn\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n": types.GetEscrowAccountsHistoryDocument,
    "\n\tquery GetClientContractsByIdsInRightPanel($input: GetClientContractsByIdsInput!) {\n\t\tgetClientContractsByIds(input: $input) {\n\t\t\tclientContracts {\n\t\t\t\tclientContractProperties {\n\t\t\t\t\tid\n\t\t\t\t\tdate\n\t\t\t\t\tnumber\n\t\t\t\t\tprice\n\t\t\t\t\tclientContractType\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tproduct {\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\tproductCategory\n\t\t\t\t\t}\n\t\t\t\t\tobject {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.GetClientContractsByIdsInRightPanelDocument,
    "\n\tquery GetObjectsInObjectPicker {\n\t\tgetObjects {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t}\n": types.GetObjectsInObjectPickerDocument,
    "\n\tmutation CreateActualPaymentsInNewActualPayments($input: [CreateActualPaymentInput!]!) {\n\t\tcreateActualPayments(input: $input)\n\t}\n": types.CreateActualPaymentsInNewActualPaymentsDocument,
    "\n\tmutation CreateScheduledPaymentsInNewScheduledPayments($input: [CreateScheduledPaymentInput!]!) {\n\t\tcreateScheduledPayments(input: $input)\n\t}\n": types.CreateScheduledPaymentsInNewScheduledPaymentsDocument,
    "\n  query GetPaymentsInPaymentSchedule(\n    $getScheduledPaymentsInput: GetScheduledPaymentsInput!,\n    $getActualPaymentsInput: GetActualPaymentsInput!,\n    $getClientContractInput: GetClientContractInput!\n  ) {\n    getScheduledPayments(input: $getScheduledPaymentsInput) {\n      scheduledPayments {\n        id\n        date\n        payment\n        scheduledPaymentType\n      }\n    }\n    getActualPayments(input: $getActualPaymentsInput) {\n      actualPayments {\n        id\n        date\n        payment\n      }\n    }\n    getClientContract(input: $getClientContractInput) {\n      clientContractProperties {\n        number\n        price\n      }\n    }\n  }\n": types.GetPaymentsInPaymentScheduleDocument,
    "\n\tquery GetEscrowAccountsHistoryByDduNumberInPaymentSchedule($input: GetEscrowAccountsHistoryByDduNumberInput!) {\n\t\tgetEscrowAccountsHistoryByDduNumber(input: $input) {\n\t\t\tid\n\t\t\tstatus\n\t\t\tnumber\n\t\t\topeningDate\n\t\t\tdepositedAmount\n\t\t\tincomingBalance\n\t\t\tdateOfTransaction\n\t\t\ttransactionAmount\n\t\t\toutgoingBalance\n\t\t\texpirationDate\n\t\t\tdepositor\n\t\t\tdepositorInn\n\t\t\tdduNumber\n\t\t\tdduDate\n\t\t\tloanAgreementNumber\n\t\t\tloanAgreementDate\n\t\t\tclosingDate\n\t\t\tbuilderInn\n\t\t}\n\t}\n": types.GetEscrowAccountsHistoryByDduNumberInPaymentScheduleDocument,
    "\n\tmutation DeleteScheduledPaymentInPaymentSchedule($input: DeleteScheduledPaymentInput!) {\n\t\tdeleteScheduledPayment(input: $input) {\n\t\t\tisDeleted\n\t\t}\n\t}\n": types.DeleteScheduledPaymentInPaymentScheduleDocument,
    "\n\tmutation DeleteActualPaymentInPaymentSchedule($input: DeleteActualPaymentInput!) {\n\t\tdeleteActualPayment(input: $input) {\n\t\t\tisDeleted\n\t\t}\n\t}\n": types.DeleteActualPaymentInPaymentScheduleDocument,
    "\n\tquery GetPricingProductInProductInfo($input: GetPricingProductInput!) {\n\t\tgetPricingProduct(input: $input) {\n\t\t\tobject {\n\t\t\t\tname\n\t\t\t}\n\t\t\tcategory {\n\t\t\t\tname\n\t\t\t}\n\t\t\tproduct {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tarea\n\t\t\t\tprice\n\t\t\t\toneGtId\n\t\t\t}\n\t\t\tproductType {\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n": types.GetPricingProductInProductInfoDocument,
    "\n\tquery GetObjectsInProductPicker {\n\t\tgetObjects {\n\t\t\tid\n\t\t\tname\n\t\t\tcommonDbObjectsId\n\t\t}\n\t}\n": types.GetObjectsInProductPickerDocument,
    "\n\tquery GetPricingProductsInProductPicker($input: GetPricingProductsInput!) {\n\t\tgetPricingProducts(input: $input) {\n\t\t\tproducts {\n\t\t\t\tproduct {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tarea\n\t\t\t\t\tprice\n\t\t\t\t}\n\t\t\t\tcategory {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.GetPricingProductsInProductPickerDocument,
    "\n\tmutation CreateProductInProductPicker($input: CreateProductInput!) {\n\t\tcreateProduct(input: $input) {\n\t\t\tproduct {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tpricingProductsId\n\t\t\t\tproductCategory\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbObjectsId\n\t\t\t}\n\t\t}\n\t}\n": types.CreateProductInProductPickerDocument,
    "\n\tmutation CreateRealEstateAgencyActInNewRealEstateAgencyAct($input: CreateRealEstateAgencyActInput!) {\n    createRealEstateAgencyAct(input: $input) {\n      id\n    }\n  }\n": types.CreateRealEstateAgencyActInNewRealEstateAgencyActDocument,
    "\n\tquery GetRealEstateAgencyActCandidatesInRealEstateAgencyActCandidates {\n\t\tgetRealEstateAgencyActCandidates {\n\t\t\tclientContractId\n\t\t\tclientContractNumber\n\t\t\tclientContractType\n\t\t\tclientContractPrice\n\t\t\tagencyContractId\n\t\t\tagencyContractNumber\n\t\t\tagencyContractPercent\n\t\t\tagencyContractThreshold\n\t\t\tagencyContractMaxDays\n\t\t\tagencyId\n\t\t\tagencyName\n\t\t\ttransactionAmount\n\t\t\tpaymentPercentage\n\t\t\tpayAmount\n\t\t\tmostRecentTransactionDate\n\t\t\tdaysElapsed\n\t\t}\n\t}\n": types.GetRealEstateAgencyActCandidatesInRealEstateAgencyActCandidatesDocument,
    "\n\tmutation CreateRealEstateAgencyActInRealEstateAgencyActCandidates($input: CreateRealEstateAgencyActInput!) {\n\t\tcreateRealEstateAgencyAct(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n": types.CreateRealEstateAgencyActInRealEstateAgencyActCandidatesDocument,
    "\n  query GetRealEstateAgencyActInRealEstateAgencyAct($input: GetRealEstateAgencyActInput!) {\n    getRealEstateAgencyAct(input: $input) {\n      agency {\n        id\n        name\n        commonDbContractorsId\n      }\n      clientContract {\n        clientContract {\n          id\n          number\n          price\n          clientContractType\n        }\n        object {\n          id\n          name\n          commonDbObjectsId\n        }\n      }\n      realEstateAgencyAct {\n        id\n        number\n        date\n        amount\n        link\n        retention\n        note\n      }\n      agencyContract {\n\t\t\t\tagencyContract {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tagencyContractType\n\t\t\t\t}\n\t\t\t\trealEstateAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n    }\n  }  \n": types.GetRealEstateAgencyActInRealEstateAgencyActDocument,
    "\n  mutation UpdateRealEstateAgencyActInRealEstateAgencyAct($input: UpdateRealEstateAgencyActInput!) {\n    updateRealEstateAgencyAct(input: $input) {\n      id\n    }\n  }  \n": types.UpdateRealEstateAgencyActInRealEstateAgencyActDocument,
    "\n\tquery getRealEstateAgencyActsInRealEstateAgencyActs ($input: GetRealEstateAgencyActsInput) {\n\t\tgetRealEstateAgencyActs(input: $input) {\n\t\t\trealEstateAgencyActs {\n\t\t\t\tagency {\n\t\t\t\t\tid\n\t\t\t\t\tinn\n\t\t\t\t\tname\n\t\t\t\t\tcommonDbContractorsId\n\t\t\t\t}\n\t\t\t\trealEstateAgencyAct {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tamount\n\t\t\t\t\tlink\n\t\t\t\t\tretention\n\t\t\t\t}\n\t\t\t\tclientContract {\n\t\t\t\t\tclientContract {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tnumber\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tagencyContract {\n\t\t\t\t\tagencyContract {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\tagencyContractType\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n": types.GetRealEstateAgencyActsInRealEstateAgencyActsDocument,
    "\n\tquery GetRealEstateAgentsInRealEstateAgentPicker($input: GetRealEstateAgentsInput) {\n\t\tgetRealEstateAgents(input: $input) {\n\t\t\trealEstateAgents {\n\t\t\t\trealEstateAgent {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.GetRealEstateAgentsInRealEstateAgentPickerDocument,
    "\n\tquery GetRealEstateAgentInRealEstateAgent($input: GetRealEstateAgentInput!) {\n\t\tgetRealEstateAgent(input: $input) {\n\t\t\trealEstateAgent {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tphone\n\t\t\t\toneGtId\n\t\t\t}\n\t\t\tagencies {\n\t\t\t\tid\n\t\t\t\tcommonDbContractorsId\n\t\t\t\tname\n\t\t\t\tinn\n\t\t\t}\n\t\t}\n\t}\n": types.GetRealEstateAgentInRealEstateAgentDocument,
    "\n\tmutation CreateRealEstateAgentInNewRealEstateAgent($input: CreateRealEstateAgentInput!) {\n\t\tcreateRealEstateAgent(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n": types.CreateRealEstateAgentInNewRealEstateAgentDocument,
    "\n\tmutation UpdateRealEstateAgentInRealEstateAgent($input: UpdateRealEstateAgentInput!) {\n\t\tupdateRealEstateAgent(input: $input) {\n\t\t\tid\n\t\t\tfullName\n\t\t}\n\t}\n": types.UpdateRealEstateAgentInRealEstateAgentDocument,
    "\n\tquery GetRealEstateAgentsInRealEstateAgents($input: GetRealEstateAgentsInput!) {\n\t\tgetRealEstateAgents(input: $input) {\n\t\t\trealEstateAgents {\n\t\t\t\trealEstateAgent {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n": types.GetRealEstateAgentsInRealEstateAgentsDocument,
    "\n\tquery GetSubsidiesInSubsidyPicker {\n\t\tgetSubsidies {\n\t\t\tid\n\t\t\tname\n\t\t\tisVisible\n\t\t}\n\t}\n": types.GetSubsidiesInSubsidyPickerDocument,
    "\n\tmutation CreateTransferActInNewTransferAct($input: CreateTransferActInput!) {\n    createTransferAct(input: $input) {\n      id\n    }\n  }\n": types.CreateTransferActInNewTransferActDocument,
    "\n\tquery GetObjectsInTransferActCandidates{\n\t\tgetObjects {\n\t\t\tid\n\t\t\tname\n\t\t\tcommonDbObjectsId\n\t\t}\n\t}\n": types.GetObjectsInTransferActCandidatesDocument,
    "\n\tquery GetClientContractsWithoutTransferActInTransferActCandidates($input: GetClientContractsInput!) {\n\t\tgetClientContractsWithoutTransferAct(input: $input) {\n\t\t\tclientContracts {\n\t\t\t\tclientContractProperties {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tclientContractType\n\t\t\t\t}\n\t\t\t\tclients {\n\t\t\t\t\tclient {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tfullName\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tproduct {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\tproductCategory\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n": types.GetClientContractsWithoutTransferActInTransferActCandidatesDocument,
    "\n  query GetTransferActInTransferAct($input: GetTransferActInput!) {\n    getTransferAct(input: $input) {\n      clientContract {\n        id\n        number\n        clientContractType\n        price\n      }\n      object {\n        id\n        commonDbObjectsId\n        name\n      }\n      product {\n        id\n        number\n        productCategory\n        pricingProductsId\n      }\n      transferAct {\n        id\n        number\n        date\n        link\n      }\n      representatives {\n        representative {\n          id\n          fullName\n        }\n        client {\n          id\n          fullName\n        }\n      }\n      clients {\n        id\n        fullName \n      }\n    }\n  } \n": types.GetTransferActInTransferActDocument,
    "\n  mutation UpdateTransferActInTransferAct($input: UpdateTransferActInput!) {\n    updateTransferAct(input: $input) {\n      id\n    }\n  }  \n": types.UpdateTransferActInTransferActDocument,
    "\n\tquery GetTransferActsInTransferActs($input: GetTransferActsInput!) {\n    getTransferActs(input: $input) {\n      transferActs {\n        transferAct {\n          id\n          number\n          date\n          link\n        }\n        clientContract {\n\t\t\t\t\tid\n          number\n\t\t\t\t\tclientContractType\n        }\n        object {\n          name\n        }\n        product {\n          number\n          productCategory\n        }\n      }\n\t\t\ttotalCount\n    }\n  }\n": types.GetTransferActsInTransferActsDocument,
    "\n\tquery GetUsersInUserPicker {\n\t\tgetUsers {\n\t\t\tid\n\t\t\tfullName\n\t\t\tisManager\n\t\t}\n\t}\n": types.GetUsersInUserPickerDocument,
};

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = gql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function gql(source: string): unknown;

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetBanksInAdminPanelBanks {\n    getBanks {\n      id\n      name\n      isVisible\n    }\n  }\n"): (typeof documents)["\n\tquery GetBanksInAdminPanelBanks {\n    getBanks {\n      id\n      name\n      isVisible\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation CreateBankInAdminPanelBanks($input: CreateBankInput!) {\n    createBank(input: $input) {\n      id\n      name\n    }\n  }\n"): (typeof documents)["\n  mutation CreateBankInAdminPanelBanks($input: CreateBankInput!) {\n    createBank(input: $input) {\n      id\n      name\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UpdateBankInAdminPanelBanks($input: UpdateBankInput!) {\n    updateBank(input: $input) {\n      id\n      name\n    }\n  }\n"): (typeof documents)["\n  mutation UpdateBankInAdminPanelBanks($input: UpdateBankInput!) {\n    updateBank(input: $input) {\n      id\n      name\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteBankInAdminPanelBanks($input: DeleteBankInput!) {\n    deleteBank(input: $input)\n  }\n"): (typeof documents)["\n  mutation DeleteBankInAdminPanelBanks($input: DeleteBankInput!) {\n    deleteBank(input: $input)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetUsersInAdminPanelManagers {\n    getUsers {\n      id\n      fullName\n      email\n      phone\n      isManager\n      isStaff\n      userRole\n    }\n  }\n"): (typeof documents)["\n\tquery GetUsersInAdminPanelManagers {\n    getUsers {\n      id\n      fullName\n      email\n      phone\n      isManager\n      isStaff\n      userRole\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation CreateUserInAdminPanelManagers($input: CreateUserInput!) {\n    createUser(input: $input) {\n      id\n    }\n  }\n"): (typeof documents)["\n  mutation CreateUserInAdminPanelManagers($input: CreateUserInput!) {\n    createUser(input: $input) {\n      id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UpdateUserInAdminPanelManagers($input: UpdateUserInput!) {\n    updateUser(input: $input) {\n      id\n    }\n  }\n"): (typeof documents)["\n  mutation UpdateUserInAdminPanelManagers($input: UpdateUserInput!) {\n    updateUser(input: $input) {\n      id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteUserInAdminPanelManagers($input: DeleteUserInput!) {\n    deleteUser(input: $input)\n  }\n"): (typeof documents)["\n  mutation DeleteUserInAdminPanelManagers($input: DeleteUserInput!) {\n    deleteUser(input: $input)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetSubsidiesInAdminPanelSubsidies {\n    getSubsidies {\n      id\n      name\n      isVisible\n    }\n  }\n"): (typeof documents)["\n\tquery GetSubsidiesInAdminPanelSubsidies {\n    getSubsidies {\n      id\n      name\n      isVisible\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation CreateSubsidyInAdminPanelSubsidies($input: CreateSubsidyInput!) {\n    createSubsidy(input: $input) {\n      id\n      name\n    }\n  }\n"): (typeof documents)["\n  mutation CreateSubsidyInAdminPanelSubsidies($input: CreateSubsidyInput!) {\n    createSubsidy(input: $input) {\n      id\n      name\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UpdateSubsidyInAdminPanelSubsidies($input: UpdateSubsidyInput!) {\n    updateSubsidy(input: $input) {\n      id\n      name\n    }\n  }\n"): (typeof documents)["\n  mutation UpdateSubsidyInAdminPanelSubsidies($input: UpdateSubsidyInput!) {\n    updateSubsidy(input: $input) {\n      id\n      name\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation DeleteSubsidyInAdminPanelSubsidies($input: DeleteSubsidyInput!) {\n    deleteSubsidy(input: $input)\n  }\n"): (typeof documents)["\n  mutation DeleteSubsidyInAdminPanelSubsidies($input: DeleteSubsidyInput!) {\n    deleteSubsidy(input: $input)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetAgenciesInAgencyContractPicker($input: GetAgenciesInput!) {\n\t\tgetAgencies(input: $input) {\n\t\t\tagencies {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbContractorsId\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetAgenciesInAgencyContractPicker($input: GetAgenciesInput!) {\n\t\tgetAgencies(input: $input) {\n\t\t\tagencies {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbContractorsId\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetAgencyContractsInAgencyContractPicker($input: GetAgencyContractsInput!) {\n\t\tgetAgencyContracts(input: $input) {\n\t\t\tagencyContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tagencyContractType\n\t\t\t}\n\t\t\tmipAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tmaxDays\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t}\n\t\t\t}\n\t\t\trealEstateAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tmaxDays\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t}\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbObjectsId\n\t\t\t}\n\t\t\tagency {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbContractorsId\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetAgencyContractsInAgencyContractPicker($input: GetAgencyContractsInput!) {\n\t\tgetAgencyContracts(input: $input) {\n\t\t\tagencyContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tagencyContractType\n\t\t\t}\n\t\t\tmipAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tmaxDays\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t}\n\t\t\t}\n\t\t\trealEstateAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tmaxDays\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t}\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbObjectsId\n\t\t\t}\n\t\t\tagency {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbContractorsId\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetAgencyContractSignatoriesInAgencyContractSignatoryPicker($input: GetAgencyContractSignatoriesInput!) {\n\t\tgetAgencyContractSignatories(input: $input) {\n\t\t\tid\n\t\t\tfullName\n\t\t\tbasedOn\n\t\t\ttitle\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetAgencyContractSignatoriesInAgencyContractSignatoryPicker($input: GetAgencyContractSignatoriesInput!) {\n\t\tgetAgencyContractSignatories(input: $input) {\n\t\t\tid\n\t\t\tfullName\n\t\t\tbasedOn\n\t\t\ttitle\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetObjectsInMipAgencyContract {\n\t\tgetObjects {\n      id\n      name\n\t\t}\n\t}\n"): (typeof documents)["\n  query GetObjectsInMipAgencyContract {\n\t\tgetObjects {\n      id\n      name\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetAgencyContractInMipAgencyContract($input: GetAgencyContractInput!) {\n\t\tgetAgencyContract(input: $input) {\n\t\t\tagencyContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tagencyContractType\n\t\t\t\tlink\n\t\t\t}\n\t\t\tagencyContractSignatory {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tbasedOn\n\t\t\t\ttitle\n\t\t\t}\n\t\t\tmipAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t\tmaxDays\n\t\t\t\t}\n\t\t\t}\n\t\t\tentity {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tagency {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tresponsibleUser {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetAgencyContractInMipAgencyContract($input: GetAgencyContractInput!) {\n\t\tgetAgencyContract(input: $input) {\n\t\t\tagencyContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tagencyContractType\n\t\t\t\tlink\n\t\t\t}\n\t\t\tagencyContractSignatory {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tbasedOn\n\t\t\t\ttitle\n\t\t\t}\n\t\t\tmipAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t\tmaxDays\n\t\t\t\t}\n\t\t\t}\n\t\t\tentity {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tagency {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tresponsibleUser {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation CreateAgencyContractInMipAgencyContract($input: CreateAgencyContractInput!) {\n\t\tcreateAgencyContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"): (typeof documents)["\n  mutation CreateAgencyContractInMipAgencyContract($input: CreateAgencyContractInput!) {\n\t\tcreateAgencyContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UpdateAgencyContractInMipAgencyContract($input: UpdateAgencyContractInput!) {\n\t\tupdateAgencyContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"): (typeof documents)["\n  mutation UpdateAgencyContractInMipAgencyContract($input: UpdateAgencyContractInput!) {\n\t\tupdateAgencyContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateAgencyContractSignatoryInNewAgencyContractSignatory($input: CreateAgencyContractSignatoryInput!) {\n\t\tcreateAgencyContractSignatory(input: $input) {\n\t\t\tid\n\t\t\tfullName\n\t\t\tbasedOn\n\t\t\ttitle\n\t\t}\n\t}\t\n"): (typeof documents)["\n\tmutation CreateAgencyContractSignatoryInNewAgencyContractSignatory($input: CreateAgencyContractSignatoryInput!) {\n\t\tcreateAgencyContractSignatory(input: $input) {\n\t\t\tid\n\t\t\tfullName\n\t\t\tbasedOn\n\t\t\ttitle\n\t\t}\n\t}\t\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetObjectsInNewAgencyContract {\n\t\tgetObjects {\n      id\n      name\n\t\t}\n\t}\n"): (typeof documents)["\n  query GetObjectsInNewAgencyContract {\n\t\tgetObjects {\n      id\n      name\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetAgencyContractInRealEstateAgencyContract($input: GetAgencyContractInput!) {\n\t\tgetAgencyContract(input: $input) {\n\t\t\tagencyContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tagencyContractType\n\t\t\t\tlink\n\t\t\t}\n\t\t\tagencyContractSignatory {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tbasedOn\n\t\t\t\ttitle\n\t\t\t}\n\t\t\trealEstateAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t\tmaxDays\n\t\t\t\t}\n\t\t\t}\n\t\t\tentity {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tagency {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tresponsibleUser {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetAgencyContractInRealEstateAgencyContract($input: GetAgencyContractInput!) {\n\t\tgetAgencyContract(input: $input) {\n\t\t\tagencyContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tagencyContractType\n\t\t\t\tlink\n\t\t\t}\n\t\t\tagencyContractSignatory {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tbasedOn\n\t\t\t\ttitle\n\t\t\t}\n\t\t\trealEstateAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t\tmaxDays\n\t\t\t\t}\n\t\t\t}\n\t\t\tentity {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tagency {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tresponsibleUser {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation CreateAgencyContractInNewAgencyContract($input: CreateAgencyContractInput!) {\n\t\tcreateAgencyContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"): (typeof documents)["\n  mutation CreateAgencyContractInNewAgencyContract($input: CreateAgencyContractInput!) {\n\t\tcreateAgencyContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UpdateAgencyContractInNewAgencyContract($input: UpdateAgencyContractInput!) {\n\t\tupdateAgencyContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"): (typeof documents)["\n  mutation UpdateAgencyContractInNewAgencyContract($input: UpdateAgencyContractInput!) {\n\t\tupdateAgencyContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetAgenciesInAgencies($input: GetAgenciesInput!) {\n\t\tgetAgencies(input: $input) {\n\t\t\tagencies {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetAgenciesInAgencies($input: GetAgenciesInput!) {\n\t\tgetAgencies(input: $input) {\n\t\t\tagencies {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetAgenciesInAgencyPicker($input: GetAgenciesInput!) {\n\t\tgetAgencies(input: $input) {\n\t\t\tagencies {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetAgenciesInAgencyPicker($input: GetAgenciesInput!) {\n\t\tgetAgencies(input: $input) {\n\t\t\tagencies {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetAgencyAndAgencyContractsInAgency(\n\t\t$agencyInput: GetAgencyInput!\n\t\t$agencyContractsInput:GetAgencyContractsInput!\n\t) {\n\t\tgetAgency(input: $agencyInput) {\n\t\t\tagency {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tinn\n\t\t\t\tcommonDbContractorsId\n\t\t\t}\n\t\t}\n\t\tgetAgencyContracts(input: $agencyContractsInput) {\n\t\t\tagencyContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tagencyContractType\n\t\t\t}\n\t\t\tmipAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tmaxDays\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t}\n\t\t\t}\n\t\t\trealEstateAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tmaxDays\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t}\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tcommonDbObjectsId\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetAgencyAndAgencyContractsInAgency(\n\t\t$agencyInput: GetAgencyInput!\n\t\t$agencyContractsInput:GetAgencyContractsInput!\n\t) {\n\t\tgetAgency(input: $agencyInput) {\n\t\t\tagency {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tinn\n\t\t\t\tcommonDbContractorsId\n\t\t\t}\n\t\t}\n\t\tgetAgencyContracts(input: $agencyContractsInput) {\n\t\t\tagencyContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tagencyContractType\n\t\t\t}\n\t\t\tmipAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tmaxDays\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t}\n\t\t\t}\n\t\t\trealEstateAgencyContractProperties {\n\t\t\t\tagencyContractCommission {\n\t\t\t\t\tmaxDays\n\t\t\t\t\tpercent\n\t\t\t\t\tthreshold\n\t\t\t\t}\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tcommonDbObjectsId\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetCommonContractorInAgency($input: GetCommonContractorInput!) {\n\t\tgetCommonContractor(input: $input) {\n\t\t\tcontractor {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tshortName\n\t\t\t\tinn\n\t\t\t\tkpp\n\t\t\t\togrn\n\t\t\t\tlegalAddress\n\t\t\t\tactualAddress\n\t\t\t\tcontacts\n\t\t\t\treconciliationLink\n\t\t\t\tisActive\n\t\t\t\tpropogatedAt\n\t\t\t\tphone\n\t\t\t}\n\t\t\taccounts {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tbank {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tcity\n\t\t\t\t\tbik\n\t\t\t\t\tcorrespondentNumber\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetCommonContractorInAgency($input: GetCommonContractorInput!) {\n\t\tgetCommonContractor(input: $input) {\n\t\t\tcontractor {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tshortName\n\t\t\t\tinn\n\t\t\t\tkpp\n\t\t\t\togrn\n\t\t\t\tlegalAddress\n\t\t\t\tactualAddress\n\t\t\t\tcontacts\n\t\t\t\treconciliationLink\n\t\t\t\tisActive\n\t\t\t\tpropogatedAt\n\t\t\t\tphone\n\t\t\t}\n\t\t\taccounts {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tbank {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tcity\n\t\t\t\t\tbik\n\t\t\t\t\tcorrespondentNumber\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetCommonContractorsInNewAgency($input: GetCommonContractorsInput!) {\n\t\tgetCommonContractors(input: $input) {\n\t\t\tcontractors {\n\t\t\t\tcontractor {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tshortName\n\t\t\t\t\tinn\n\t\t\t\t\tkpp\n\t\t\t\t\togrn\n\t\t\t\t\tlegalAddress\n\t\t\t\t\tactualAddress\n\t\t\t\t\tcontacts\n\t\t\t\t\treconciliationLink\n\t\t\t\t\tisActive\n\t\t\t\t\tpropogatedAt\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t\taccounts {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tbank {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t\tcity\n\t\t\t\t\t\tbik\n\t\t\t\t\t\tcorrespondentNumber\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetCommonContractorsInNewAgency($input: GetCommonContractorsInput!) {\n\t\tgetCommonContractors(input: $input) {\n\t\t\tcontractors {\n\t\t\t\tcontractor {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tshortName\n\t\t\t\t\tinn\n\t\t\t\t\tkpp\n\t\t\t\t\togrn\n\t\t\t\t\tlegalAddress\n\t\t\t\t\tactualAddress\n\t\t\t\t\tcontacts\n\t\t\t\t\treconciliationLink\n\t\t\t\t\tisActive\n\t\t\t\t\tpropogatedAt\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t\taccounts {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tbank {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t\tcity\n\t\t\t\t\t\tbik\n\t\t\t\t\t\tcorrespondentNumber\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateAgencyInNewAgency($input: CreateAgencyInput!) {\n\t\tcreateAgency(input: $input) {\n\t\t\tid\n\t\t}\n\t}\t\n"): (typeof documents)["\n\tmutation CreateAgencyInNewAgency($input: CreateAgencyInput!) {\n\t\tcreateAgency(input: $input) {\n\t\t\tid\n\t\t}\n\t}\t\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetBanksInBankPicker {\n\t\tgetBanks {\n\t\t\tid\n\t\t\tname\n\t\t\tisVisible\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetBanksInBankPicker {\n\t\tgetBanks {\n\t\t\tid\n\t\t\tname\n\t\t\tisVisible\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateAssignmentInAssignment($input: CreateAssignmentInput!) {\n    createAssignment(input: $input)\n  }\n"): (typeof documents)["\n\tmutation CreateAssignmentInAssignment($input: CreateAssignmentInput!) {\n    createAssignment(input: $input)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetObjectsInClientContracts {\n\t\tgetObjects {\n\t\t\tid\n\t\t\tname\n\t\t\tcommonDbObjectsId\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetObjectsInClientContracts {\n\t\tgetObjects {\n\t\t\tid\n\t\t\tname\n\t\t\tcommonDbObjectsId\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetClientContractsInClientContracts($input: GetClientContractsInput!) {\n\t\tgetClientContracts(input: $input) {\n\t\t\tclientContracts {\n\t\t\t\tclientContractProperties {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tprice\n\t\t\t\t\tdate\n\t\t\t\t\tclientContractType\n\t\t\t\t}\n\t\t\t\tclients {\n\t\t\t\t\tclient {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tfullName\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tproduct {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\tproductCategory\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tagencyContracts {\n            agencyContract {\n              agencyContractType\n          }\n        }\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetClientContractsInClientContracts($input: GetClientContractsInput!) {\n\t\tgetClientContracts(input: $input) {\n\t\t\tclientContracts {\n\t\t\t\tclientContractProperties {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tprice\n\t\t\t\t\tdate\n\t\t\t\t\tclientContractType\n\t\t\t\t}\n\t\t\t\tclients {\n\t\t\t\t\tclient {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tfullName\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tproduct {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\tproductCategory\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tagencyContracts {\n            agencyContract {\n              agencyContractType\n          }\n        }\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetClientContractInDduClientContract($input: GetClientContractInput!) {\n\t\tgetClientContract(input: $input) {\n\t\t\tagencyContracts {\n\t\t\t\tagencyContract {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tagencyContractType\n\t\t\t\t}\n\t\t\t\tmipAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trealEstateAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tagency {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tcommonDbContractorsId\n\t\t\t\t}\n\t\t\t}\n\t\t\tbank {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tisVisible\n\t\t\t}\n\t\t\tsubsidy {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tisVisible\n\t\t\t}\n\t\t\tclientContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tregistrationDate\n\t\t\t\tprice\n\t\t\t\tclientContractType\n\t\t\t\tcomment\n\t\t\t\tlink\n\t\t\t}\n\t\t\tclients {\n\t\t\t\tclient {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t\tisMain\n\t\t\t\tshare\n\t\t\t}\n\t\t\tmanager {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbObjectsId\n\t\t\t}\n\t\t\tproduct {\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tcommonDbObjectsId\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tid\n\t\t\t\t\tpricingProductsId\n\t\t\t\t\tnumber\n\t\t\t\t\tproductCategory\n\t\t\t\t}\n\t\t\t}\n\t\t\trealEstateAgent {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t\tdduClientContractProperties {\n\t\t\t\tid\n\t\t\t\tisEscrowDiscount\n\t\t\t\tescrowAccountOpeningDate\n\t\t\t\tescrowPeriod\n\t\t\t\tescrowAccountNumber\n\t\t\t\tdduLink\n\t\t\t\treturnAccount\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetClientContractInDduClientContract($input: GetClientContractInput!) {\n\t\tgetClientContract(input: $input) {\n\t\t\tagencyContracts {\n\t\t\t\tagencyContract {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tagencyContractType\n\t\t\t\t}\n\t\t\t\tmipAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trealEstateAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tagency {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tcommonDbContractorsId\n\t\t\t\t}\n\t\t\t}\n\t\t\tbank {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tisVisible\n\t\t\t}\n\t\t\tsubsidy {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tisVisible\n\t\t\t}\n\t\t\tclientContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tregistrationDate\n\t\t\t\tprice\n\t\t\t\tclientContractType\n\t\t\t\tcomment\n\t\t\t\tlink\n\t\t\t}\n\t\t\tclients {\n\t\t\t\tclient {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t\tisMain\n\t\t\t\tshare\n\t\t\t}\n\t\t\tmanager {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbObjectsId\n\t\t\t}\n\t\t\tproduct {\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tcommonDbObjectsId\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tid\n\t\t\t\t\tpricingProductsId\n\t\t\t\t\tnumber\n\t\t\t\t\tproductCategory\n\t\t\t\t}\n\t\t\t}\n\t\t\trealEstateAgent {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t\tdduClientContractProperties {\n\t\t\t\tid\n\t\t\t\tisEscrowDiscount\n\t\t\t\tescrowAccountOpeningDate\n\t\t\t\tescrowPeriod\n\t\t\t\tescrowAccountNumber\n\t\t\t\tdduLink\n\t\t\t\treturnAccount\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateClientContractIDduClientContract($input: CreateClientContractInput!) {\n\t\tcreateClientContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation CreateClientContractIDduClientContract($input: CreateClientContractInput!) {\n\t\tcreateClientContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateClientContractInDduClientContract($input: UpdateClientContractInput!) {\n\t\tupdateClientContract(input: $input) {\n\t\t\tid\n\t\t\tnumber\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateClientContractInDduClientContract($input: UpdateClientContractInput!) {\n\t\tupdateClientContract(input: $input) {\n\t\t\tid\n\t\t\tnumber\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetClientContractInDkpClientContract($input: GetClientContractInput!) {\n\t\tgetClientContract(input: $input) {\n\t\t\tagencyContracts {\n\t\t\t\tagencyContract {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tagencyContractType\n\t\t\t\t}\n\t\t\t\tmipAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trealEstateAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tagency {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tcommonDbContractorsId\n\t\t\t\t}\n\t\t\t}\n\t\t\tbank {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tisVisible\n\t\t\t}\n\t\t\tsubsidy {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tisVisible\n\t\t\t}\n\t\t\tclientContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tregistrationDate\n\t\t\t\tprice\n\t\t\t\tclientContractType\n\t\t\t\tcomment\n\t\t\t\tlink\n\t\t\t}\n\t\t\tclients {\n\t\t\t\tclient {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t\tisMain\n\t\t\t\tshare\n\t\t\t}\n\t\t\tmanager {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbObjectsId\n\t\t\t}\n\t\t\tproduct {\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tcommonDbObjectsId\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tid\n\t\t\t\t\tpricingProductsId\n\t\t\t\t\tnumber\n\t\t\t\t\tproductCategory\n\t\t\t\t}\n\t\t\t}\n\t\t\trealEstateAgent {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t\tdkpClientContractProperties {\n\t\t\t\tid\n\t\t\t\tdkpLink\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetClientContractInDkpClientContract($input: GetClientContractInput!) {\n\t\tgetClientContract(input: $input) {\n\t\t\tagencyContracts {\n\t\t\t\tagencyContract {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tagencyContractType\n\t\t\t\t}\n\t\t\t\tmipAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trealEstateAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tagency {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tcommonDbContractorsId\n\t\t\t\t}\n\t\t\t}\n\t\t\tbank {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tisVisible\n\t\t\t}\n\t\t\tsubsidy {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tisVisible\n\t\t\t}\n\t\t\tclientContractProperties {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tdate\n\t\t\t\tregistrationDate\n\t\t\t\tprice\n\t\t\t\tclientContractType\n\t\t\t\tcomment\n\t\t\t\tlink\n\t\t\t}\n\t\t\tclients {\n\t\t\t\tclient {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t\tisMain\n\t\t\t\tshare\n\t\t\t}\n\t\t\tmanager {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbObjectsId\n\t\t\t}\n\t\t\tproduct {\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tcommonDbObjectsId\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tid\n\t\t\t\t\tpricingProductsId\n\t\t\t\t\tnumber\n\t\t\t\t\tproductCategory\n\t\t\t\t}\n\t\t\t}\n\t\t\trealEstateAgent {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t}\n\t\t\tdkpClientContractProperties {\n\t\t\t\tid\n\t\t\t\tdkpLink\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateClientContractInDkpClientContract($input: CreateClientContractInput!) {\n\t\tcreateClientContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation CreateClientContractInDkpClientContract($input: CreateClientContractInput!) {\n\t\tcreateClientContract(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateClientContractInDkpClientContract($input: UpdateClientContractInput!) {\n\t\tupdateClientContract(input: $input) {\n\t\t\tid\n\t\t\tnumber\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateClientContractInDkpClientContract($input: UpdateClientContractInput!) {\n\t\tupdateClientContract(input: $input) {\n\t\t\tid\n\t\t\tnumber\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetClientEntityInClientEntity($input: GetClientInput!) {\n\t\tgetClient(input: $input) {\n\t\t\tclientProperties {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tinn\n\t\t\t\tphone\n\t\t\t\temail\n\t\t\t\taddress\n\t\t\t\tclientCategory\n\t\t\t}\n\t\t\tclientEntityProperties {\n\t\t\t\tkpp\n\t\t\t}\n\t\t\trepresentatives {\n        id\n        fullName\n        attorneyNumber\n        attorneyDate\n        authorizedBy\n        authorizedRole\n      }\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetClientEntityInClientEntity($input: GetClientInput!) {\n\t\tgetClient(input: $input) {\n\t\t\tclientProperties {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tinn\n\t\t\t\tphone\n\t\t\t\temail\n\t\t\t\taddress\n\t\t\t\tclientCategory\n\t\t\t}\n\t\t\tclientEntityProperties {\n\t\t\t\tkpp\n\t\t\t}\n\t\t\trepresentatives {\n        id\n        fullName\n        attorneyNumber\n        attorneyDate\n        authorizedBy\n        authorizedRole\n      }\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateClientEntityInClientEntity($input: CreateClientInput!) {\n\t\tcreateClient(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation CreateClientEntityInClientEntity($input: CreateClientInput!) {\n\t\tcreateClient(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateClientEntityInClientEntity($input: UpdateClientInput!) {\n\t\tupdateClient(input: $input) {\n\t\t\tfullName\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateClientEntityInClientEntity($input: UpdateClientInput!) {\n\t\tupdateClient(input: $input) {\n\t\t\tfullName\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetClientIndividualMinorInClientIndividualMinor($input: GetClientInput!) {\n\t\tgetClient(input: $input) {\n\t\t\tclientProperties {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tinn\n\t\t\t\tphone\n\t\t\t\temail\n\t\t\t\taddress\n\t\t\t\tclientCategory\n\t\t\t}\n\t\t\tclientIndividualMinorProperties {\n\t\t\t\tdob\n\t\t\t\tsnils\n\t\t\t\tbirthCertificate\n\t\t\t\tclientPassport {\n\t\t\t\t\tnumber\n\t\t\t\t\tissued\n\t\t\t\t\tcode\n\t\t\t\t\tplaceOfBirth\n\t\t\t\t\tregistrationAddress\n\t\t\t\t}\n\t\t\t\trepresentatives {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t}\n\t\t\trepresentatives {\n        id\n        fullName\n        attorneyNumber\n        attorneyDate\n        authorizedBy\n        authorizedRole\n      }\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetClientIndividualMinorInClientIndividualMinor($input: GetClientInput!) {\n\t\tgetClient(input: $input) {\n\t\t\tclientProperties {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tinn\n\t\t\t\tphone\n\t\t\t\temail\n\t\t\t\taddress\n\t\t\t\tclientCategory\n\t\t\t}\n\t\t\tclientIndividualMinorProperties {\n\t\t\t\tdob\n\t\t\t\tsnils\n\t\t\t\tbirthCertificate\n\t\t\t\tclientPassport {\n\t\t\t\t\tnumber\n\t\t\t\t\tissued\n\t\t\t\t\tcode\n\t\t\t\t\tplaceOfBirth\n\t\t\t\t\tregistrationAddress\n\t\t\t\t}\n\t\t\t\trepresentatives {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t}\n\t\t\trepresentatives {\n        id\n        fullName\n        attorneyNumber\n        attorneyDate\n        authorizedBy\n        authorizedRole\n      }\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateClientIndividualMinorInClientIndividualMinor($input: CreateClientInput!) {\n\t\tcreateClient(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation CreateClientIndividualMinorInClientIndividualMinor($input: CreateClientInput!) {\n\t\tcreateClient(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateClientIndividualMinorInClientIndividualMinor($input: UpdateClientInput!) {\n\t\tupdateClient(input: $input) {\n\t\t\tfullName\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateClientIndividualMinorInClientIndividualMinor($input: UpdateClientInput!) {\n\t\tupdateClient(input: $input) {\n\t\t\tfullName\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetClientIndividualInClientIndividual($input: GetClientInput!) {\n\t\tgetClient(input: $input) {\n\t\t\tclientProperties {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tinn\n\t\t\t\tphone\n\t\t\t\temail\n\t\t\t\taddress\n\t\t\t\tclientCategory\n\t\t\t}\n\t\t\tclientIndividualProperties {\n\t\t\t\tdob\n\t\t\t\tsnils\n\t\t\t\tclientPassport {\n\t\t\t\t\tnumber\n\t\t\t\t\tissued\n\t\t\t\t\tcode\n\t\t\t\t\tplaceOfBirth\n\t\t\t\t\tregistrationAddress\n\t\t\t\t}\n\t\t\t}\n\t\t\trepresentatives {\n        id\n        fullName\n        attorneyNumber\n        attorneyDate\n        authorizedBy\n        authorizedRole\n      } \n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetClientIndividualInClientIndividual($input: GetClientInput!) {\n\t\tgetClient(input: $input) {\n\t\t\tclientProperties {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tinn\n\t\t\t\tphone\n\t\t\t\temail\n\t\t\t\taddress\n\t\t\t\tclientCategory\n\t\t\t}\n\t\t\tclientIndividualProperties {\n\t\t\t\tdob\n\t\t\t\tsnils\n\t\t\t\tclientPassport {\n\t\t\t\t\tnumber\n\t\t\t\t\tissued\n\t\t\t\t\tcode\n\t\t\t\t\tplaceOfBirth\n\t\t\t\t\tregistrationAddress\n\t\t\t\t}\n\t\t\t}\n\t\t\trepresentatives {\n        id\n        fullName\n        attorneyNumber\n        attorneyDate\n        authorizedBy\n        authorizedRole\n      } \n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateClientIndividualInClientIndividual($input: CreateClientInput!) {\n\t\tcreateClient(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation CreateClientIndividualInClientIndividual($input: CreateClientInput!) {\n\t\tcreateClient(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateClientIndividualInClientIndividual($input: UpdateClientInput!) {\n\t\tupdateClient(input: $input) {\n\t\t\tfullName\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateClientIndividualInClientIndividual($input: UpdateClientInput!) {\n\t\tupdateClient(input: $input) {\n\t\t\tfullName\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetClientsInClientPicker($input: GetClientsInput!) {\n\t\tgetClients(input: $input) {\n\t\t\tclients {\n\t\t\t\tclientProperties {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetClientsInClientPicker($input: GetClientsInput!) {\n\t\tgetClients(input: $input) {\n\t\t\tclients {\n\t\t\t\tclientProperties {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetClientsInClients($input: GetClientsInput!) {\n\t\tgetClients(input: $input) {\n\t\t\tclients {\n\t\t\t\tclientProperties {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetClientsInClients($input: GetClientsInput!) {\n\t\tgetClients(input: $input) {\n\t\t\tclients {\n\t\t\t\tclientProperties {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tclientCategory\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateRepresentativeInNewRepresentative($input: CreateRepresentativeInput!) {\n\t\tcreateRepresentative(input: $input) {\n\t\t\tid\n      fullName\n      attorneyNumber\n      attorneyDate\n      authorizedBy\n      authorizedRole\n\t\t}\n\t}\t\n"): (typeof documents)["\n\tmutation CreateRepresentativeInNewRepresentative($input: CreateRepresentativeInput!) {\n\t\tcreateRepresentative(input: $input) {\n\t\t\tid\n      fullName\n      attorneyNumber\n      attorneyDate\n      authorizedBy\n      authorizedRole\n\t\t}\n\t}\t\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetRepresentativesByClientIdsInRepresentativePicker($input: GetRepresentativesByClientIdsInput!) {\n    getRepresentativesByClientIds(input: $input) {\n      representative {\n        id\n        fullName\n        attorneyNumber\n        attorneyDate\n        authorizedBy\n        authorizedRole\n      }\n      client {\n        id\n        fullName\n      }\n    }\n  }\n"): (typeof documents)["\n\tquery GetRepresentativesByClientIdsInRepresentativePicker($input: GetRepresentativesByClientIdsInput!) {\n    getRepresentativesByClientIds(input: $input) {\n      representative {\n        id\n        fullName\n        attorneyNumber\n        attorneyDate\n        authorizedBy\n        authorizedRole\n      }\n      client {\n        id\n        fullName\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateRepresentativeInNewRepresentative($input: UpdateRepresentativeInput!) {\n\t\tupdateRepresentative(input: $input) {\n\t\t\tid\n      fullName\n      attorneyNumber\n      attorneyDate\n      authorizedBy\n      authorizedRole\n\t\t}\n\t}\t\n"): (typeof documents)["\n\tmutation UpdateRepresentativeInNewRepresentative($input: UpdateRepresentativeInput!) {\n\t\tupdateRepresentative(input: $input) {\n\t\t\tid\n      fullName\n      attorneyNumber\n      attorneyDate\n      authorizedBy\n      authorizedRole\n\t\t}\n\t}\t\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetEntitiesInEntityPicker {\n\t\tgetEntities{\n\t\t\tentity {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tobjects {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetEntitiesInEntityPicker {\n\t\tgetEntities{\n\t\t\tentity {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tobjects {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateEscrowAccountsHistory($input: [EscrowAccountHistoryInput!]!) {\n\t\tcreateEscrowAccountsHistory(input: $input)\n\t}\n"): (typeof documents)["\n\tmutation CreateEscrowAccountsHistory($input: [EscrowAccountHistoryInput!]!) {\n\t\tcreateEscrowAccountsHistory(input: $input)\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetEscrowAccountsHistory($input: GetEscrowAccountsHistoryInput) {\n\t\tgetEscrowAccountsHistory(input: $input) {\n\t\t\tescrowAccountsHistory {\n\t\t\t\tid\n\t\t\t\tstatus\n\t\t\t\tnumber\n\t\t\t\topeningDate\n\t\t\t\tdepositedAmount\n\t\t\t\tincomingBalance\n\t\t\t\tdateOfTransaction\n\t\t\t\ttransactionAmount\n\t\t\t\toutgoingBalance\n\t\t\t\texpirationDate\n\t\t\t\tdepositor\n\t\t\t\tdepositorInn\n\t\t\t\tdduNumber\n\t\t\t\tdduDate\n\t\t\t\tloanAgreementNumber\n\t\t\t\tloanAgreementDate\n\t\t\t\tclosingDate\n\t\t\t\tbuilderInn\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetEscrowAccountsHistory($input: GetEscrowAccountsHistoryInput) {\n\t\tgetEscrowAccountsHistory(input: $input) {\n\t\t\tescrowAccountsHistory {\n\t\t\t\tid\n\t\t\t\tstatus\n\t\t\t\tnumber\n\t\t\t\topeningDate\n\t\t\t\tdepositedAmount\n\t\t\t\tincomingBalance\n\t\t\t\tdateOfTransaction\n\t\t\t\ttransactionAmount\n\t\t\t\toutgoingBalance\n\t\t\t\texpirationDate\n\t\t\t\tdepositor\n\t\t\t\tdepositorInn\n\t\t\t\tdduNumber\n\t\t\t\tdduDate\n\t\t\t\tloanAgreementNumber\n\t\t\t\tloanAgreementDate\n\t\t\t\tclosingDate\n\t\t\t\tbuilderInn\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetClientContractsByIdsInRightPanel($input: GetClientContractsByIdsInput!) {\n\t\tgetClientContractsByIds(input: $input) {\n\t\t\tclientContracts {\n\t\t\t\tclientContractProperties {\n\t\t\t\t\tid\n\t\t\t\t\tdate\n\t\t\t\t\tnumber\n\t\t\t\t\tprice\n\t\t\t\t\tclientContractType\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tproduct {\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\tproductCategory\n\t\t\t\t\t}\n\t\t\t\t\tobject {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetClientContractsByIdsInRightPanel($input: GetClientContractsByIdsInput!) {\n\t\tgetClientContractsByIds(input: $input) {\n\t\t\tclientContracts {\n\t\t\t\tclientContractProperties {\n\t\t\t\t\tid\n\t\t\t\t\tdate\n\t\t\t\t\tnumber\n\t\t\t\t\tprice\n\t\t\t\t\tclientContractType\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tproduct {\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\tproductCategory\n\t\t\t\t\t}\n\t\t\t\t\tobject {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetObjectsInObjectPicker {\n\t\tgetObjects {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetObjectsInObjectPicker {\n\t\tgetObjects {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateActualPaymentsInNewActualPayments($input: [CreateActualPaymentInput!]!) {\n\t\tcreateActualPayments(input: $input)\n\t}\n"): (typeof documents)["\n\tmutation CreateActualPaymentsInNewActualPayments($input: [CreateActualPaymentInput!]!) {\n\t\tcreateActualPayments(input: $input)\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateScheduledPaymentsInNewScheduledPayments($input: [CreateScheduledPaymentInput!]!) {\n\t\tcreateScheduledPayments(input: $input)\n\t}\n"): (typeof documents)["\n\tmutation CreateScheduledPaymentsInNewScheduledPayments($input: [CreateScheduledPaymentInput!]!) {\n\t\tcreateScheduledPayments(input: $input)\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetPaymentsInPaymentSchedule(\n    $getScheduledPaymentsInput: GetScheduledPaymentsInput!,\n    $getActualPaymentsInput: GetActualPaymentsInput!,\n    $getClientContractInput: GetClientContractInput!\n  ) {\n    getScheduledPayments(input: $getScheduledPaymentsInput) {\n      scheduledPayments {\n        id\n        date\n        payment\n        scheduledPaymentType\n      }\n    }\n    getActualPayments(input: $getActualPaymentsInput) {\n      actualPayments {\n        id\n        date\n        payment\n      }\n    }\n    getClientContract(input: $getClientContractInput) {\n      clientContractProperties {\n        number\n        price\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetPaymentsInPaymentSchedule(\n    $getScheduledPaymentsInput: GetScheduledPaymentsInput!,\n    $getActualPaymentsInput: GetActualPaymentsInput!,\n    $getClientContractInput: GetClientContractInput!\n  ) {\n    getScheduledPayments(input: $getScheduledPaymentsInput) {\n      scheduledPayments {\n        id\n        date\n        payment\n        scheduledPaymentType\n      }\n    }\n    getActualPayments(input: $getActualPaymentsInput) {\n      actualPayments {\n        id\n        date\n        payment\n      }\n    }\n    getClientContract(input: $getClientContractInput) {\n      clientContractProperties {\n        number\n        price\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetEscrowAccountsHistoryByDduNumberInPaymentSchedule($input: GetEscrowAccountsHistoryByDduNumberInput!) {\n\t\tgetEscrowAccountsHistoryByDduNumber(input: $input) {\n\t\t\tid\n\t\t\tstatus\n\t\t\tnumber\n\t\t\topeningDate\n\t\t\tdepositedAmount\n\t\t\tincomingBalance\n\t\t\tdateOfTransaction\n\t\t\ttransactionAmount\n\t\t\toutgoingBalance\n\t\t\texpirationDate\n\t\t\tdepositor\n\t\t\tdepositorInn\n\t\t\tdduNumber\n\t\t\tdduDate\n\t\t\tloanAgreementNumber\n\t\t\tloanAgreementDate\n\t\t\tclosingDate\n\t\t\tbuilderInn\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetEscrowAccountsHistoryByDduNumberInPaymentSchedule($input: GetEscrowAccountsHistoryByDduNumberInput!) {\n\t\tgetEscrowAccountsHistoryByDduNumber(input: $input) {\n\t\t\tid\n\t\t\tstatus\n\t\t\tnumber\n\t\t\topeningDate\n\t\t\tdepositedAmount\n\t\t\tincomingBalance\n\t\t\tdateOfTransaction\n\t\t\ttransactionAmount\n\t\t\toutgoingBalance\n\t\t\texpirationDate\n\t\t\tdepositor\n\t\t\tdepositorInn\n\t\t\tdduNumber\n\t\t\tdduDate\n\t\t\tloanAgreementNumber\n\t\t\tloanAgreementDate\n\t\t\tclosingDate\n\t\t\tbuilderInn\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation DeleteScheduledPaymentInPaymentSchedule($input: DeleteScheduledPaymentInput!) {\n\t\tdeleteScheduledPayment(input: $input) {\n\t\t\tisDeleted\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation DeleteScheduledPaymentInPaymentSchedule($input: DeleteScheduledPaymentInput!) {\n\t\tdeleteScheduledPayment(input: $input) {\n\t\t\tisDeleted\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation DeleteActualPaymentInPaymentSchedule($input: DeleteActualPaymentInput!) {\n\t\tdeleteActualPayment(input: $input) {\n\t\t\tisDeleted\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation DeleteActualPaymentInPaymentSchedule($input: DeleteActualPaymentInput!) {\n\t\tdeleteActualPayment(input: $input) {\n\t\t\tisDeleted\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetPricingProductInProductInfo($input: GetPricingProductInput!) {\n\t\tgetPricingProduct(input: $input) {\n\t\t\tobject {\n\t\t\t\tname\n\t\t\t}\n\t\t\tcategory {\n\t\t\t\tname\n\t\t\t}\n\t\t\tproduct {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tarea\n\t\t\t\tprice\n\t\t\t\toneGtId\n\t\t\t}\n\t\t\tproductType {\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetPricingProductInProductInfo($input: GetPricingProductInput!) {\n\t\tgetPricingProduct(input: $input) {\n\t\t\tobject {\n\t\t\t\tname\n\t\t\t}\n\t\t\tcategory {\n\t\t\t\tname\n\t\t\t}\n\t\t\tproduct {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tarea\n\t\t\t\tprice\n\t\t\t\toneGtId\n\t\t\t}\n\t\t\tproductType {\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetObjectsInProductPicker {\n\t\tgetObjects {\n\t\t\tid\n\t\t\tname\n\t\t\tcommonDbObjectsId\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetObjectsInProductPicker {\n\t\tgetObjects {\n\t\t\tid\n\t\t\tname\n\t\t\tcommonDbObjectsId\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetPricingProductsInProductPicker($input: GetPricingProductsInput!) {\n\t\tgetPricingProducts(input: $input) {\n\t\t\tproducts {\n\t\t\t\tproduct {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tarea\n\t\t\t\t\tprice\n\t\t\t\t}\n\t\t\t\tcategory {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetPricingProductsInProductPicker($input: GetPricingProductsInput!) {\n\t\tgetPricingProducts(input: $input) {\n\t\t\tproducts {\n\t\t\t\tproduct {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tarea\n\t\t\t\t\tprice\n\t\t\t\t}\n\t\t\t\tcategory {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateProductInProductPicker($input: CreateProductInput!) {\n\t\tcreateProduct(input: $input) {\n\t\t\tproduct {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tpricingProductsId\n\t\t\t\tproductCategory\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbObjectsId\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation CreateProductInProductPicker($input: CreateProductInput!) {\n\t\tcreateProduct(input: $input) {\n\t\t\tproduct {\n\t\t\t\tid\n\t\t\t\tnumber\n\t\t\t\tpricingProductsId\n\t\t\t\tproductCategory\n\t\t\t}\n\t\t\tobject {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tcommonDbObjectsId\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateRealEstateAgencyActInNewRealEstateAgencyAct($input: CreateRealEstateAgencyActInput!) {\n    createRealEstateAgencyAct(input: $input) {\n      id\n    }\n  }\n"): (typeof documents)["\n\tmutation CreateRealEstateAgencyActInNewRealEstateAgencyAct($input: CreateRealEstateAgencyActInput!) {\n    createRealEstateAgencyAct(input: $input) {\n      id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetRealEstateAgencyActCandidatesInRealEstateAgencyActCandidates {\n\t\tgetRealEstateAgencyActCandidates {\n\t\t\tclientContractId\n\t\t\tclientContractNumber\n\t\t\tclientContractType\n\t\t\tclientContractPrice\n\t\t\tagencyContractId\n\t\t\tagencyContractNumber\n\t\t\tagencyContractPercent\n\t\t\tagencyContractThreshold\n\t\t\tagencyContractMaxDays\n\t\t\tagencyId\n\t\t\tagencyName\n\t\t\ttransactionAmount\n\t\t\tpaymentPercentage\n\t\t\tpayAmount\n\t\t\tmostRecentTransactionDate\n\t\t\tdaysElapsed\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetRealEstateAgencyActCandidatesInRealEstateAgencyActCandidates {\n\t\tgetRealEstateAgencyActCandidates {\n\t\t\tclientContractId\n\t\t\tclientContractNumber\n\t\t\tclientContractType\n\t\t\tclientContractPrice\n\t\t\tagencyContractId\n\t\t\tagencyContractNumber\n\t\t\tagencyContractPercent\n\t\t\tagencyContractThreshold\n\t\t\tagencyContractMaxDays\n\t\t\tagencyId\n\t\t\tagencyName\n\t\t\ttransactionAmount\n\t\t\tpaymentPercentage\n\t\t\tpayAmount\n\t\t\tmostRecentTransactionDate\n\t\t\tdaysElapsed\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateRealEstateAgencyActInRealEstateAgencyActCandidates($input: CreateRealEstateAgencyActInput!) {\n\t\tcreateRealEstateAgencyAct(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation CreateRealEstateAgencyActInRealEstateAgencyActCandidates($input: CreateRealEstateAgencyActInput!) {\n\t\tcreateRealEstateAgencyAct(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetRealEstateAgencyActInRealEstateAgencyAct($input: GetRealEstateAgencyActInput!) {\n    getRealEstateAgencyAct(input: $input) {\n      agency {\n        id\n        name\n        commonDbContractorsId\n      }\n      clientContract {\n        clientContract {\n          id\n          number\n          price\n          clientContractType\n        }\n        object {\n          id\n          name\n          commonDbObjectsId\n        }\n      }\n      realEstateAgencyAct {\n        id\n        number\n        date\n        amount\n        link\n        retention\n        note\n      }\n      agencyContract {\n\t\t\t\tagencyContract {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tagencyContractType\n\t\t\t\t}\n\t\t\t\trealEstateAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n    }\n  }  \n"): (typeof documents)["\n  query GetRealEstateAgencyActInRealEstateAgencyAct($input: GetRealEstateAgencyActInput!) {\n    getRealEstateAgencyAct(input: $input) {\n      agency {\n        id\n        name\n        commonDbContractorsId\n      }\n      clientContract {\n        clientContract {\n          id\n          number\n          price\n          clientContractType\n        }\n        object {\n          id\n          name\n          commonDbObjectsId\n        }\n      }\n      realEstateAgencyAct {\n        id\n        number\n        date\n        amount\n        link\n        retention\n        note\n      }\n      agencyContract {\n\t\t\t\tagencyContract {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tagencyContractType\n\t\t\t\t}\n\t\t\t\trealEstateAgencyContractProperties {\n\t\t\t\t\tagencyContractCommission {\n\t\t\t\t\t\tmaxDays\n\t\t\t\t\t\tpercent\n\t\t\t\t\t\tthreshold\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n    }\n  }  \n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UpdateRealEstateAgencyActInRealEstateAgencyAct($input: UpdateRealEstateAgencyActInput!) {\n    updateRealEstateAgencyAct(input: $input) {\n      id\n    }\n  }  \n"): (typeof documents)["\n  mutation UpdateRealEstateAgencyActInRealEstateAgencyAct($input: UpdateRealEstateAgencyActInput!) {\n    updateRealEstateAgencyAct(input: $input) {\n      id\n    }\n  }  \n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery getRealEstateAgencyActsInRealEstateAgencyActs ($input: GetRealEstateAgencyActsInput) {\n\t\tgetRealEstateAgencyActs(input: $input) {\n\t\t\trealEstateAgencyActs {\n\t\t\t\tagency {\n\t\t\t\t\tid\n\t\t\t\t\tinn\n\t\t\t\t\tname\n\t\t\t\t\tcommonDbContractorsId\n\t\t\t\t}\n\t\t\t\trealEstateAgencyAct {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tamount\n\t\t\t\t\tlink\n\t\t\t\t\tretention\n\t\t\t\t}\n\t\t\t\tclientContract {\n\t\t\t\t\tclientContract {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tnumber\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tagencyContract {\n\t\t\t\t\tagencyContract {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\tagencyContractType\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery getRealEstateAgencyActsInRealEstateAgencyActs ($input: GetRealEstateAgencyActsInput) {\n\t\tgetRealEstateAgencyActs(input: $input) {\n\t\t\trealEstateAgencyActs {\n\t\t\t\tagency {\n\t\t\t\t\tid\n\t\t\t\t\tinn\n\t\t\t\t\tname\n\t\t\t\t\tcommonDbContractorsId\n\t\t\t\t}\n\t\t\t\trealEstateAgencyAct {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tamount\n\t\t\t\t\tlink\n\t\t\t\t\tretention\n\t\t\t\t}\n\t\t\t\tclientContract {\n\t\t\t\t\tclientContract {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tnumber\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tagencyContract {\n\t\t\t\t\tagencyContract {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\tagencyContractType\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetRealEstateAgentsInRealEstateAgentPicker($input: GetRealEstateAgentsInput) {\n\t\tgetRealEstateAgents(input: $input) {\n\t\t\trealEstateAgents {\n\t\t\t\trealEstateAgent {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetRealEstateAgentsInRealEstateAgentPicker($input: GetRealEstateAgentsInput) {\n\t\tgetRealEstateAgents(input: $input) {\n\t\t\trealEstateAgents {\n\t\t\t\trealEstateAgent {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetRealEstateAgentInRealEstateAgent($input: GetRealEstateAgentInput!) {\n\t\tgetRealEstateAgent(input: $input) {\n\t\t\trealEstateAgent {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tphone\n\t\t\t\toneGtId\n\t\t\t}\n\t\t\tagencies {\n\t\t\t\tid\n\t\t\t\tcommonDbContractorsId\n\t\t\t\tname\n\t\t\t\tinn\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetRealEstateAgentInRealEstateAgent($input: GetRealEstateAgentInput!) {\n\t\tgetRealEstateAgent(input: $input) {\n\t\t\trealEstateAgent {\n\t\t\t\tid\n\t\t\t\tfullName\n\t\t\t\tphone\n\t\t\t\toneGtId\n\t\t\t}\n\t\t\tagencies {\n\t\t\t\tid\n\t\t\t\tcommonDbContractorsId\n\t\t\t\tname\n\t\t\t\tinn\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateRealEstateAgentInNewRealEstateAgent($input: CreateRealEstateAgentInput!) {\n\t\tcreateRealEstateAgent(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation CreateRealEstateAgentInNewRealEstateAgent($input: CreateRealEstateAgentInput!) {\n\t\tcreateRealEstateAgent(input: $input) {\n\t\t\tid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateRealEstateAgentInRealEstateAgent($input: UpdateRealEstateAgentInput!) {\n\t\tupdateRealEstateAgent(input: $input) {\n\t\t\tid\n\t\t\tfullName\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateRealEstateAgentInRealEstateAgent($input: UpdateRealEstateAgentInput!) {\n\t\tupdateRealEstateAgent(input: $input) {\n\t\t\tid\n\t\t\tfullName\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetRealEstateAgentsInRealEstateAgents($input: GetRealEstateAgentsInput!) {\n\t\tgetRealEstateAgents(input: $input) {\n\t\t\trealEstateAgents {\n\t\t\t\trealEstateAgent {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetRealEstateAgentsInRealEstateAgents($input: GetRealEstateAgentsInput!) {\n\t\tgetRealEstateAgents(input: $input) {\n\t\t\trealEstateAgents {\n\t\t\t\trealEstateAgent {\n\t\t\t\t\tid\n\t\t\t\t\tfullName\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetSubsidiesInSubsidyPicker {\n\t\tgetSubsidies {\n\t\t\tid\n\t\t\tname\n\t\t\tisVisible\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetSubsidiesInSubsidyPicker {\n\t\tgetSubsidies {\n\t\t\tid\n\t\t\tname\n\t\t\tisVisible\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateTransferActInNewTransferAct($input: CreateTransferActInput!) {\n    createTransferAct(input: $input) {\n      id\n    }\n  }\n"): (typeof documents)["\n\tmutation CreateTransferActInNewTransferAct($input: CreateTransferActInput!) {\n    createTransferAct(input: $input) {\n      id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetObjectsInTransferActCandidates{\n\t\tgetObjects {\n\t\t\tid\n\t\t\tname\n\t\t\tcommonDbObjectsId\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetObjectsInTransferActCandidates{\n\t\tgetObjects {\n\t\t\tid\n\t\t\tname\n\t\t\tcommonDbObjectsId\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetClientContractsWithoutTransferActInTransferActCandidates($input: GetClientContractsInput!) {\n\t\tgetClientContractsWithoutTransferAct(input: $input) {\n\t\t\tclientContracts {\n\t\t\t\tclientContractProperties {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tclientContractType\n\t\t\t\t}\n\t\t\t\tclients {\n\t\t\t\t\tclient {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tfullName\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tproduct {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\tproductCategory\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetClientContractsWithoutTransferActInTransferActCandidates($input: GetClientContractsInput!) {\n\t\tgetClientContractsWithoutTransferAct(input: $input) {\n\t\t\tclientContracts {\n\t\t\t\tclientContractProperties {\n\t\t\t\t\tid\n\t\t\t\t\tnumber\n\t\t\t\t\tdate\n\t\t\t\t\tclientContractType\n\t\t\t\t}\n\t\t\t\tclients {\n\t\t\t\t\tclient {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tfullName\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tproduct {\n\t\t\t\t\tproduct {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\tproductCategory\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tobject {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetTransferActInTransferAct($input: GetTransferActInput!) {\n    getTransferAct(input: $input) {\n      clientContract {\n        id\n        number\n        clientContractType\n        price\n      }\n      object {\n        id\n        commonDbObjectsId\n        name\n      }\n      product {\n        id\n        number\n        productCategory\n        pricingProductsId\n      }\n      transferAct {\n        id\n        number\n        date\n        link\n      }\n      representatives {\n        representative {\n          id\n          fullName\n        }\n        client {\n          id\n          fullName\n        }\n      }\n      clients {\n        id\n        fullName \n      }\n    }\n  } \n"): (typeof documents)["\n  query GetTransferActInTransferAct($input: GetTransferActInput!) {\n    getTransferAct(input: $input) {\n      clientContract {\n        id\n        number\n        clientContractType\n        price\n      }\n      object {\n        id\n        commonDbObjectsId\n        name\n      }\n      product {\n        id\n        number\n        productCategory\n        pricingProductsId\n      }\n      transferAct {\n        id\n        number\n        date\n        link\n      }\n      representatives {\n        representative {\n          id\n          fullName\n        }\n        client {\n          id\n          fullName\n        }\n      }\n      clients {\n        id\n        fullName \n      }\n    }\n  } \n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UpdateTransferActInTransferAct($input: UpdateTransferActInput!) {\n    updateTransferAct(input: $input) {\n      id\n    }\n  }  \n"): (typeof documents)["\n  mutation UpdateTransferActInTransferAct($input: UpdateTransferActInput!) {\n    updateTransferAct(input: $input) {\n      id\n    }\n  }  \n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetTransferActsInTransferActs($input: GetTransferActsInput!) {\n    getTransferActs(input: $input) {\n      transferActs {\n        transferAct {\n          id\n          number\n          date\n          link\n        }\n        clientContract {\n\t\t\t\t\tid\n          number\n\t\t\t\t\tclientContractType\n        }\n        object {\n          name\n        }\n        product {\n          number\n          productCategory\n        }\n      }\n\t\t\ttotalCount\n    }\n  }\n"): (typeof documents)["\n\tquery GetTransferActsInTransferActs($input: GetTransferActsInput!) {\n    getTransferActs(input: $input) {\n      transferActs {\n        transferAct {\n          id\n          number\n          date\n          link\n        }\n        clientContract {\n\t\t\t\t\tid\n          number\n\t\t\t\t\tclientContractType\n        }\n        object {\n          name\n        }\n        product {\n          number\n          productCategory\n        }\n      }\n\t\t\ttotalCount\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetUsersInUserPicker {\n\t\tgetUsers {\n\t\t\tid\n\t\t\tfullName\n\t\t\tisManager\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetUsersInUserPicker {\n\t\tgetUsers {\n\t\t\tid\n\t\t\tfullName\n\t\t\tisManager\n\t\t}\n\t}\n"];

export function gql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;