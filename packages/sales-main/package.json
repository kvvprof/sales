{
  "name": "sales-main",
  "private": true,
  "main": "main.ts",
  "config": {
    "prismaSchema": "./src/integrations/database/prisma/schema.prisma"
  },
  "scripts": {
    "dev": "npx prisma generate && NODE_ENV=DEVELOPMENT nodemon",
    "build": "rimraf dist && tsc && npm run prisma:copy && tsc-alias",
    "start": "npx prisma generate && npm run build && NODE_ENV=PRODUCTION node dist/main.js",
    "codegen": "SCHEMA_PATH=http://localhost:9001 graphql-code-generator --config ../../codegen.server.ts",
    "eslint": "eslint --quiet src",
    "eslint:fix": "eslint --quiet src --fix",
    "prisma:copy": "cpy 'src/integrations/database/prisma/output/**/*' 'dist/integrations/database/prisma/output' --parents",
    "prisma:dev:generate": "dotenv -e .env.development -- npx prisma generate --schema=${npm_package_config_prismaSchema}",
    "prisma:dev:pull": "dotenv -e .env.development -- npx prisma db pull --schema=${npm_package_config_prismaSchema}",
    "prisma:dev:push": "dotenv -e .env.development -- npx prisma db push --schema=${npm_package_config_prismaSchema}",
    "prisma:dev:migrate": "dotenv -e .env.development -- npx prisma migrate dev --schema=${npm_package_config_prismaSchema}",
    "prisma:dev:reset": "dotenv -e .env.development -- npx prisma migrate reset --skip-seed --schema=${npm_package_config_prismaSchema}",
    "prisma:prod:generate": "dotenv -e .env.production -- npx prisma generate --schema=${npm_package_config_prismaSchema}",
    "prisma:prod:pull": "dotenv -e .env.production -- npx prisma db pull --schema=${npm_package_config_prismaSchema}",
    "prisma:prod:migrate": "dotenv -e .env.production -- npx prisma migrate deploy --schema=${npm_package_config_prismaSchema}"
  }
}
